@tailwind base;
@tailwind components;
@tailwind utilities;
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
.bordercolor{
    border:1px solid #A32926;
}

.bordercolortwo{
    border:1px solid #37226C;
}

.imageback{
    background-image:url('../../public/image/Group.png');
    /* background-position: center; */
    background-repeat: no-repeat;
    background-size: cover;
}
.holdingbook{
    background-image: url('../../public/image/bg.png');
    background-repeat: no-repeat;
    background-size:contain;
    background-position: center;
}
/* var image = "{{ asset('image/Images.png') }}";
var left = "{{ asset('image/Left.png') }}";
var next = "{{ asset('images/bg.png') }}"; */
.imgone{
    background-image:url('../../public/image/Images.png');
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

.imgtwo{
    background-image:url('../../public/image/Left.png');
    background-position: center;
    background-repeat: no-repeat;
    background-size: auto;

}

.imgthree{
    background-image:url('../../public/image/Image.png');
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

.imge{
 /* Imge.png */
 background-image:url('../../public/image/Imge.png');
 background-position: center;
 background-repeat: no-repeat;
 background-size: cover;
}

.shownow{
    transition:all 0.5s;
}


.layout{
    /* Imge.png */
    background-image:url('../../public/image/Layer7.png');
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
   }

   .jojo{
    background-color: rgba(0, 0, 0, 0.3);

   }
   .jojo:hover{
       background-color: transparent;
    display:hidden;

   }

   .videobg{
       background-color: transparent;
       transition: all 0.5s;
   }

   .videobg:hover{
    background-color: rgba(0, 0, 0, 0.3);
   }


   :root{
	--loader-width: 20px;
	--loader-height: 20px;
	--loader-color-primary: #000000;
	--loader-color-secondary: #eee;
	--line-width: 2px;
	--animation-duration: 2s;
	--loader-initial-scale: 0.1;
}
/*
The loaders use CSS custom properties (variables) to control the attributes of the loaders
*/
.loader,.loader:before,.loader:after{
	box-sizing: border-box;
	flex-grow: 0;
	flex-shrink: 0;
}
/*
In order to get optimal results, please only change the
variables above and don't change anything in the actual loader code
*/

@keyframes circle-loader {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.loader.simple-circle {
    transform-origin: center center;
    border: var(--line-width, 4px) solid var(--loader-color-secondary, #fff);
    border-right-color: var(--loader-color-primary, #00f);
    width: var(--loader-width, 100px);
    height: var(--loader-height, 100px);
    border-radius: 50%;
    animation: circle-loader var(--animation-duration, 1s) infinite ease-out;
}

.preloader {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:rgba(255, 255, 255, 0.867);
    /* display: grid;
    justify-content: center;
    align-items: center; */
    visibility: visible;
    z-index: 999;
    transition:500ms;
  }
  .hide-preloader {
    z-index: -999;
    visibility: hidden;
  }
.change{
    border:1px solid #A32926;
}

.container{
    /* height:8px; */
}

.tip {
    position: relative;
    /* display: inline-block;
    border-bottom: 1px dotted black; */
  }

  .tip .tooltiptext {
    visibility: hidden;
    width: 180px;
    background-color: black;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 5px 0;
    position: absolute;
    z-index: 1;
    bottom: 150%;
    left: 50%;
    margin-left: -60px;
  }

  .tip .tooltiptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: black transparent transparent transparent;
  }

  .tip:hover .tooltiptext {
    visibility: visible;
  }

  /* square buttons */
.rec.rec-arrow {
    border-radius: 0;
}
/* round buttons on hover */
.rec.rec-arrow:hover {
    border-radius: 50%;
    background-color: rgba(41, 41, 165, 0.338);
    color: white;

}
/* hide disabled buttons */
.rec.rec-arrow:disabled {
    visibility: hidden;
}
/* disable default outline on focused items */
/* add custom outline on focused items */
.rec-carousel-item:focus {
    outline: none;
    box-shadow: inset 0 0 1px 1px lightgrey;
}

.textcolor{
    color:rgba(0, 0, 255, 0.347);
}





.App {
    font-family: sans-serif;
    text-align: center;
  }

  h4 {
    text-align: left;
    margin-left: 40px;
  }

  hr {
    border-top: 2px dotted #3f51b5;
  }

  button {
    margin-right: 10px;
    background: #3f51b5;
    color: white;
    border: none;
    padding: 5px 10px;
    width: 100px;
    cursor: pointer;
    box-shadow: 2px 2px 2px 1px #ccc;
  }

  /* For pdf */
  .react-pdf__Page {
    margin-top: 10px;
  }
  .react-pdf__Page__textContent {
    border: 1px solid darkgrey;
    box-shadow: 5px 5px 5px 1px #ccc;
    border-radius: 5px;
  }

  .react-pdf__Page__annotations.annotationLayer {
    padding: 20px;
  }

  .react-pdf__Page__canvas {
    margin: 0 auto;
  }

  /* For all pages */
  .all-page-container {
    height: 100%;
    max-height: 500px;
    overflow: auto;
  }
